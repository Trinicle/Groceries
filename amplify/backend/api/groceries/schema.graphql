type GroceryItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  Checked: Boolean
}

type Ingredient @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  recipes: [Recipe] @manyToMany(relationName: "RecipeIngredient")
}

type Recipe @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  Picture: String
  Timestamp: AWSTimestamp
  userID: ID! @index(name: "byUser")
  Ingredients: [Ingredient] @manyToMany(relationName: "RecipeIngredient")
  users: [User] @manyToMany(relationName: "UserRecipe")
}

type GroceryList @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  Groceries: [GroceryItem] @manyToMany(relationName: "GroceryListGroceryItem")
  userID: ID! @index(name: "byUser")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  Username: String
  HashedPassword: String
  FirstName: String
  LastName: String
  Picture: String
  Title: String
  Lists: [GroceryList] @hasMany(indexName: "byUser", fields: ["id"])
  OwnedRecipes: [GroceryList] @hasMany(indexName: "byUser", fields: ["id"])
  FavoriteRecipes: [Recipe] @manyToMany(relationName: "UserRecipe")
}